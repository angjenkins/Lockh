/**
 * 
 */
package gov.gsa.fas.services.order.v1.wdc.dao;

import java.util.HashMap;
import java.util.Map;

import gov.gsa.fas.services.order.v1.wdc.dao.AbstractWdcOrderPartDao;
import gov.gsa.fas.services.order.v1.wdc.dao.OrderPart;
import gov.gsa.fas.services.order.v1.wdc.dao.WdcOrderPartDao;
import gov.gsa.fas.webservicesb.program.fss19wsprg.GetRecordRequest;

/**
 * @author zabelc
 *
 */
public class WdcOrderPartDaoMockImpl extends AbstractWdcOrderPartDao implements WdcOrderPartDao {

	
	
//	//All
//	ALEAAC5263004E
//	ALEAAC6004001E
//	BJOB5V20440313
//	BKEC9M71490083
//
//	//CHRF	
//	BAEA5V40790041
//	BAEA5V40823005
//	AC041193070191
//	AC041193070191
//	
//	//UHRF	
//	BACA9N5014A126
//	BACA9N5014A202
//	BISH5V00240659
//	BISH5V72641449
	
	private Map<String, String> responses = new HashMap<String, String>();

	public WdcOrderPartDaoMockImpl(String recordType, boolean useOrderSuffix,String recordSuffix) {
		super(recordType, useOrderSuffix, recordSuffix);
		
		responses.put("ZKP AC041193070191AACTC","AC041193070191A4A7110           GPUHS1   07BV S12000038PB2000146PB2000098PB2000091PB2000067PB2000063PB2000062VI2000038PA2000004NA1999334BAC041193070191AXX        UPNBA59310 E520000           6    006365803000010000000000200001839666643814100000000020000380000D");
		responses.put("ZKP AC041193070191ABAS",	"AC041193070191A3A0EGSAS7110           GPAC041193070191      A00      08   2A333           2100121865DUAC0411            1010J04B000011999333199933320040011592");
		responses.put("ZKP AC041193070191CACTC","AC041193070191C4C7110           GPUHS1   07BV S12000145VI2000145PB2000104PA2000053NA1999364G51999364  0000000  0000000  0000000  0000000BAC041193070191CXX        UPNBA70350 E420000           6    091732412000010000000000200012515203761461900000000020001450000D");
		responses.put("ZKP AC041193070191CBAS",	"AC041193070191C3A0EGSAS7110           GPAC041193070191      A00      08   2A333           2100121865DUAC0411            1010J04B000011999333199933320040011592");
		responses.put("ZKP AC041193070191EACTC","AC041193070191E4E7110           GPUHS1   07BV S12000115PB2000146VI2000115PA2000063NA2000059G52000059  0000000  0000000  0000000  0000000BAC041193070191EXX        UPNBA89750 C920000           6    008387409000010000000000200009515122671454103000000020001150000D");
		responses.put("ZKP AC041193070191EBAS",	"AC041193070191E3A0EGSAS7110           GPAC041193070191      A00      08   2A333           2100121865DUAC0411            1010J04B000011999333199933320040011592");
		responses.put("ZKP AC041193070191GACTC","AC041193070191G4G7110           GPUJ     07CB CB2003302NA2000145G52000145  0000000  0000000  0000000  0000000  0000000  0000000  0000000                          UPNBAB3220    0000           6             000010000000000000000000000000000000000000000000000000D");
		responses.put("ZKP AC041193070191GBAS",	"AC041193070191G3A0EGSAS7110           GPAC041193070191      A00      08   2A333           2100121865DUAC0411            1010J04B000011999333199933320040011592");
		responses.put("ZKP ALEAAC5263004E ACTU","ALEAAC5263004E 2 5120010470250  EAMHK8   07 YB   BV 000000000000PA2005280NA2005264  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000                          MPNBGM0135 ER1             6 182043083D           00000000200000000000000299999000000000000200600700000000013514000982800000000000  0000000");
		responses.put("ZKP ALEAAC5263004E BAS",	"ALEAAC5263004E 1A0AGSA05120010470250  EAALEAAC5263004ESP5200AXP4  XP 15   2A264           2144373750DXALEAAC0000C 00000000000000000000       01    B00002200526320052640000000000000000000001693");
		responses.put("ZKP ALEAAC6004001E ACTU","ALEAAC6004001E 2 7930013425316  CNNP3 GN310  BFWVBA 000000000000S12006023SD2006018MW2006017  0000000  0000000  0000000  0000000  0000000  0000000  0000000JALEAAC6004001EXXX        N303552965S                1          D           00000000100001000000000000000000000000000200603020060190003666000224600460000000  2006023");
		responses.put("ZKP ALEAAC6004001E BAS",	"ALEAAC6004001E 1A0AGSA07930013425316  CNALEAAC6004001ESP5200AXP   XP 03   2A017           2144373750DXALEAAC0000C 00000000000000000000       01    B00001200601320060170000000000000000000001692");
		responses.put("ZKP BACA9N5014A126 ACTU","BACA9N5014A126 2 6850008260981  KTFHD9   07 YB   BV 000000000000S12005129SA2005035PA2005019NA2005018  0000000  0000000  0000000  0000000  0000000  0000000TGN0003TD4156876          FPNESN2165 ER1        N    6 073203820E           00000000200002000000000000000000000000000200511120051240005060000440000000000000  0000000");
		responses.put("ZKP BACA9N5014A126 BAS",	"BACA9N5014A126 1A01GSA06850008260981  KTBACA9N5014A126BXXUAYLYYB16   08   2L018           2100AC6000EXBACA000000C 00000000000000000000       01    B00002200501520050180000000000000000000006122");
		responses.put("ZKP BACA9N5014A202 ACTU","BACA9N5014A202 2 6850008260981  KTFHD9   07 YB   BV 000000000000S12005194SA2005035PA2005019NA2005018  0000000  0000000  0000000  0000000  0000000  0000000TD4156876XXXXXXX          FPNESN2175 ER1        N    6 073203820E           00000000100001000000000000000000000000000200520220051240005060000440000000000000  0000000");
		responses.put("ZKP BACA9N5014A202 BAS",	"BACA9N5014A202 1A01GSA06850008260981  KTBACA9N5014A202BXXUAYLYYB18   08     018           2100AC6000EXBACA000000C 00000000000000000000       01    B00001200501520050180000000000000000000006122");
		responses.put("ZKP BAEA5V40790041 ACTC","BAEA5V40790041 4 5345013658700  PGFHD9   07BV S12004156VI2004156PA2004142NA2004086  0000000  0000000  0000000  0000000  0000000  0000000BBAEA5V40790041XXX        FPNBNT4504 ER10000       FMS 6    096628409000010000000000200415600217500014500000000020041560000D");
		responses.put("ZKP BAEA5V40790041 BAS",	"BAEA5V40790041 3A0EGSA05345013658700  PGBAEA5V40790041BZ2KRBLYYB01   12   2F086           2100240050DGBAE002            1000C01B000012004086200408620041831763");
		responses.put("ZKP BAEA5V40823005 ACTC","BAEA5V40823005 4 5120002244659  EAMJ     07C8 C82004086NA2004085  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000                                        0000           6             000700008400000000000000000000000000000000000000000000D");
		responses.put("ZKP BAEA5V40823005 BAS",	"BAEA5V40823005 3A0EGSA05120002244659  EABAEA5V40823005BZ2KRBLYYB01   12     085           2100240050DGBAE002            1000C01B000702004085200408520040921763");
		responses.put("ZKP BISH5V00240659AACTU","BISH5V00240659A2A5133009885699  DZSP1 GS110  CMVXBD 006194000000S12000055SA2000047SD2000045HQ2000042  0000000  0000000  0000000  0000000  0000000  0000000JGS0001RPSI7415368        S041716               S    3          E           00000001200012000000000000000000000000000200004620000480001394000092400002630000  2000055");
		responses.put("ZKP BISH5V00240659ABAS",	"BISH5V00240659A1A05GSA05133009885699  DZBISH5V00240659DA2KTDLYYB01   030542D042           5700340190EGDIS0021000G 00000000000000000000       03    B00108200004220000420000000000000000000001511");
		responses.put("ZKP BISH5V00240659BACTU","BISH5V00240659B2B5133009885699  DZIJ     03 YDMVXBZ 000000000000NS2000045  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000                                                     7          E           00000009600000000000000000000000000000000200401000000000001394000092400000000000  0000000");
		responses.put("ZKP BISH5V00240659BBAS",	"BISH5V00240659B1A05GSA05133009885699  DZBISH5V00240659DA2KTDLYYB01   030542D042           5700340190EGDIS0021000G 00000000000000000000       03    B00108200004220000420000000000000000000001511");
		responses.put("ZKP BISH5V00240659EACTU","BISH5V00240659E2E5133009885699  DZNP3 GN310 YFMVXBA 006194000000S12004014SA2003311SD2003310HQ2003309G52003309  0000000  0000000  0000000  0000000  00000005BISH5V00240659EXX        N545350               N   M1          E           00000009600096000000000000000000000000000200401120033140001161000074400002670000  2004014");
		responses.put("ZKP BISH5V00240659EBAS",	"BISH5V00240659E1A05GSA05133009885699  DZBISH5V00240659DA2KTDLYYB01   030542D042           5700340190EGDIS0021000G 00000000000000000000       03    B00108200004220000420000000000000000000001511");
		responses.put("ZKP BISH5V72641449AACTU","BISH5V72641449A2A7510000797906  RONHWF   03 YCNWFBV 006194000000PA1997289NS1997288HQ1997287  0000000  0000000  0000000  0000000  0000000  0000000  0000000                          NXDX822878 E43         FMS 7 807379201E           03030057600000000000000000000000000000000199733600000000000140000011800000000000  0000000");
		responses.put("ZKP BISH5V72641449ABAS",	"BISH5V72641449A1A05GSA07510000797906  ROBISH5V72641449DA2KSWLYYB06   132503B287           5700340190EGDIS0021000E 00000000000000000000       03    B00605199728719972870000000000000000000001513");
		responses.put("ZKP BISH5V72641449BACTU","BISH5V72641449B2B7510000797906  RONP3 GN310  DNWFBA 000000000000S11997302SA1997293SD1997289MW1997288  0000000  0000000  0000000  0000000  0000000  0000000MGN0003BD3654083  D3654083N364500025M           N    1          E           00000002400024000000000000000000000000000199730119972970000155000011800005000000  1997302");
		responses.put("ZKP BISH5V72641449BBAS",	"BISH5V72641449B1A05GSA07510000797906  ROBISH5V72641449DA2KSWLYYB06   132503B287           5700340190EGDIS0021000E 00000000000000000000       03    B00605199728719972870000000000000000000001513");
		responses.put("ZKP BISH5V72641449DACTU","BISH5V72641449D2D7510000797906  RONP3 GN310   NWFBA 000000000000S11997323SA1997293SD1997289  0000000  0000000  0000000  0000000  0000000  0000000  0000000MGN0003BD3654117  D3654117N364499               N               E           00000000500005000000000000000000000000000199730119973030000155000011800000000000  1997323");
		responses.put("ZKP BISH5V72641449DBAS",	"BISH5V72641449D1A05GSA07510000797906  ROBISH5V72641449DA2KSWLYYB06   132503B287           5700340190EGDIS0021000E 00000000000000000000       03    B00605199728719972870000000000000000000001513");
		responses.put("ZKP BJOB5V20440313AACTU","BJOB5V20440313A2A7510007664269  EASP3 GS330  DNWQBA 000000000000S12012079SD2012061KY2012061KW2012060  0000000  0000000  0000000  0000000  0000000  0000000JBJOB5V20440313AXX        S190036                    R          D           00000007500075000000000000000000000000000201206620120750000739000052100000000000  2012079");
		responses.put("ZKP BJOB5V20440313ABAS",	"BJOB5V20440313A1A0EGSAF7510007664269  EABJOB5V20440313DA2KSGLYYB02   06   3B060           5700342130DGDJO0021000E 00000000000000000000       04    B00150201206020120600000000000000000000001512");
		responses.put("ZKP BJOB5V20440313BACTU","BJOB5V20440313B2B7510007664269  EANP3 GN310 YCNWQBA 000000000000SD2012060  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000                          N135525                    1                      00000005000000000000000000000000000000000201207300000000000739000050100010000000  0000000");
		responses.put("ZKP BJOB5V20440313BBAS",	"BJOB5V20440313B1A0EGSAF7510007664269  EABJOB5V20440313DA2KSGLYYB02   06   3B060           5700342130DGDJO0021000E 00000000000000000000       04    B00150201206020120600000000000000000000001512");
		responses.put("ZKP BJOB5V20440313CACTU","BJOB5V20440313C2C7510007664269  EANP3 GN310   NWQBA 000000000000S12012072SD2012061  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000RBJOB5V20440313CXX        N135527                MAP            D           00000000800008000000000000000000000000000201207320120680000739000050100000000000  2012072");
		responses.put("ZKP BJOB5V20440313CBAS",	"BJOB5V20440313C1A0EGSAF7510007664269  EABJOB5V20440313DA2KSGLYYB02   06   3B060           5700342130DGDJO0021000E 00000000000000000000       04    B00150201206020120600000000000000000000001512");
		responses.put("ZKP BJOB5V20440313DACTU","BJOB5V20440313D2D7510007664269  EASP3 GS330   NWQBA 000000000000S12012067SD2012062  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000JBJOB5V20440313DXX        S190037                               D           00000001700017000000000000000000000000000201206620120650000739000052100000000000  2012067");
		responses.put("ZKP BJOB5V20440313DBAS",	"BJOB5V20440313D1A0EGSAF7510007664269  EABJOB5V20440313DA2KSGLYYB02   06   3B060           5700342130DGDJO0021000E 00000000000000000000       04    B00150201206020120600000000000000000000001512");
		responses.put("ZKP BKEC9M71490083AACTU","BKEC9M71490083A2A5133009002063  EAMHTD   03   MTDBDD000000000000S11998026SX1998329PA1997156NS1997155HQ1997154  0000000  0000000  0000000  0000000  0000000BBKEC9M71490083XXX        MXDXSH9517 E43        NGN3 7 001043736E           03030010000100000000000000000000000000000000000019980090000994000059400000000000  0000000");
		responses.put("ZKP BKEC9M71490083ABAS",	"BKEC9M71490083A1A01GSA05133009002063  EABKEC9M71490083BXXBAGLYYB01   08   2L154           2100KE5000EXBKEC000000E 00000000000000000000       02    B00100199715019971540000000000000000000006412");
		responses.put("ZKP BKEC9M71490083CACTU","BKEC9M71490083C2C5133009002063  EAFP1 GF110  DMVXBA 006194000000SQ2005258S11998349SA1998338SD1998335MW1998334HQ1998331G51998331  0000000  0000000  0000000RCLOSED BY FL             F905633807A           FNGU 1          E           00000010000100000000000000000000000000000199834719983420000870000059400000450000  1998349");
		responses.put("ZKP BKEC9M71490083CBAS",	"BKEC9M71490083C1A01GSA05133009002063  EABKEC9M71490083BXXBAGLYYB01   08   2L154           2100KE5000EXBKEC000000E 00000000000000000000       02    B00100199715019971540000000000000000000006412");

/*		responses.put("ZKP ALEAAC5263004E BAS", "ALEAAC5263004E 1A0AGSA05120010470250  EAALEAAC5263004ESP5200AXP4  XP 15   2A264           2144373750DXALEAAC0000C 00000000000000000000       01    B00002200526320052640000000000000000000001693");
		responses.put("ZKP ALEAAC6004001E BAS", "ALEAAC6004001E 1A0AGSA07930013425316  CNALEAAC6004001ESP5200AXP   XP 03   2A017           2144373750DXALEAAC0000C 00000000000000000000       01    B00001200601320060170000000000000000000001692");
		responses.put("ZKP BJOB5V20440313 BAS", "BJOB5V20440313 1A0EGSAF7510007664269  EABJOB5V20440313DA2KSGLYYB02   06   3B060           5700342130DGDJO0021000E 00000000000000000000       04    B00150201206020120600000000000000000000001512");
		responses.put("ZKP BKEC9M71490083 BAS", "BKEC9M71490083 1A01GSA05133009002063  EABKEC9M71490083BXXBAGLYYB01   08   2L154           2100KE5000EXBKEC000000E 00000000000000000000       02    B00100199715019971540000000000000000000006412");
		responses.put("ZKP BAEA5V40790041 BAS", "BAEA5V40790041 3A0EGSA05345013658700  PGBAEA5V40790041BZ2KRBLYYB01   12   2F086           2100240050DGBAE002            1000C01B000012004086200408620041831763");
		responses.put("ZKP BAEA5V40823005 BAS", "BAEA5V40823005 3A0EGSA05120002244659  EABAEA5V40823005BZ2KRBLYYB01   12     085           2100240050DGBAE002            1000C01B000702004085200408520040921763");
		responses.put("ZKP AC041193070191 BAS", "AC041193070191 3A0EGSAS7110           GPAC041193070191      A00      08   2A333           2100121865DUAC0411            1010J04B000011999333199933320040011592");
		responses.put("ZKP BACA9N5014A126 BAS", "BACA9N5014A126 1A01GSA06850008260981  KTBACA9N5014A126BXXUAYLYYB16   08   2L018           2100AC6000EXBACA000000C 00000000000000000000       01    B00002200501520050180000000000000000000006122");
		responses.put("ZKP BACA9N5014A202 BAS", "BACA9N5014A202 1A01GSA06850008260981  KTBACA9N5014A202BXXUAYLYYB18   08     018           2100AC6000EXBACA000000C 00000000000000000000       01    B00001200501520050180000000000000000000006122");
		responses.put("ZKP BISH5V00240659 BAS", "BISH5V00240659 1A05GSA05133009885699  DZBISH5V00240659DA2KTDLYYB01   030542D042           5700340190EGDIS0021000G 00000000000000000000       03    B00108200004220000420000000000000000000001511");
		responses.put("ZKP BISH5V72641449 BAS", "BISH5V72641449 1A05GSA07510000797906  ROBISH5V72641449DA2KSWLYYB06   132503B287           5700340190EGDIS0021000E 00000000000000000000       03    B00605199728719972870000000000000000000001513");

		//CRHF Data
		responses.put("ZKP BAEA5V40790041 ACTC", "BAEA5V40790041 4 5345013658700  PGFHD9   07BV S12004156VI2004156PA2004142NA2004086  0000000  0000000  0000000  0000000  0000000  0000000BBAEA5V40790041XXX        FPNBNT4504 ER10000       FMS 6    096628409000010000000000200415600217500014500000000020041560000D");
		responses.put("ZKP BAEA5V40823005 ACTC", "BAEA5V40823005 4 5120002244659  EAMJ     07C8 C82004086NA2004085  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000                                        0000           6             000700008400000000000000000000000000000000000000000000D");


		//UHRF Data
		responses.put("ZKP ALEAAC5263004E ACTU", "ALEAAC5263004E 2 5120010470250  EAMHK8   07 YB   BV 000000000000PA2005280NA2005264  0000000  0000000  0000000  0000000  0000000  0000000  0000000  0000000                          MPNBGM0135 ER1             6 182043083D           00000000200000000000000299999000000000000200600700000000013514000982800000000000  0000000");
		responses.put("ZKP ALEAAC6004001E ACTU", "ALEAAC6004001E 2 7930013425316  CNNP3 GN310  BFWVBA 000000000000S12006023SD2006018MW2006017  0000000  0000000  0000000  0000000  0000000  0000000  0000000JALEAAC6004001EXXX        N303552965S                1          D           00000000100001000000000000000000000000000200603020060190003666000224600460000000  2006023");
		responses.put("ZKP BACA9N5014A126 ACTU", "BACA9N5014A126 2 6850008260981  KTFHD9   07 YB   BV 000000000000S12005129SA2005035PA2005019NA2005018  0000000  0000000  0000000  0000000  0000000  0000000TGN0003TD4156876          FPNESN2165 ER1        N    6 073203820E           00000000200002000000000000000000000000000200511120051240005060000440000000000000  0000000");
		responses.put("ZKP BACA9N5014A202 ACTU", "BACA9N5014A202 2 6850008260981  KTFHD9   07 YB   BV 000000000000S12005194SA2005035PA2005019NA2005018  0000000  0000000  0000000  0000000  0000000  0000000TD4156876XXXXXXX          FPNESN2175 ER1        N    6 073203820E           00000000100001000000000000000000000000000200520220051240005060000440000000000000  0000000");*/
	}


	/* (non-Javadoc)
	 * @see gov.gsa.fas.services.order.v1.wdc.WdcOrderPartDao#getOrderPart(java.lang.String, java.lang.String)
	 */
	@Override
	public OrderPart getOrderPart(String ordNumStr, String orderStuffix) {
		GetRecordRequest request = createGetRecordRequest(ordNumStr, orderStuffix);
		
		String data = this.responses.get(request.getInType()+" "+request.getInData());
		if( data==null )
			return makeMissingPart();
		else {
			OrderPart part = createOrderPart();
			part.setPartData(data);
			return part;
		}
	}

	private OrderPart makeMissingPart() {
		OrderPart orderPart = createOrderPart();
		orderPart.setPartData("12345678901234 BASMISING");
		return orderPart;
	}


}
